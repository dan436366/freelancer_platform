<?php
// –£–≤—ñ–º–∫–Ω—É—Ç–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ–º–∏–ª–æ–∫
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö</h1>";
echo "<style>
    body { font-family: Arial, sans-serif; padding: 20px; background: #f5f5f5; }
    .section { background: white; padding: 20px; margin: 20px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
    .success { color: green; font-weight: bold; }
    .error { color: red; font-weight: bold; }
    .warning { color: orange; font-weight: bold; }
    table { border-collapse: collapse; width: 100%; margin-top: 10px; }
    th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
    th { background-color: #4CAF50; color: white; }
    code { background: #f4f4f4; padding: 2px 5px; border-radius: 3px; }
</style>";

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
require 'db.php';

// 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
echo "<div class='section'>";
echo "<h2>1Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MySQL</h2>";
if ($conn->connect_error) {
    echo "<p class='error'>‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: " . $conn->connect_error . "</p>";
    exit();
} else {
    echo "<p class='success'>‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!</p>";
    echo "<p>–í–µ—Ä—Å—ñ—è MySQL: <code>" . $conn->server_info . "</code></p>";
    echo "<p>–ö–æ–¥—É–≤–∞–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω–Ω—è: <code>" . $conn->character_set_name() . "</code></p>";
}
echo "</div>";

// 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
echo "<div class='section'>";
echo "<h2>2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö</h2>";
$db_name = 'freelancer_platform';
$result = $conn->query("SELECT DATABASE() as db");
if ($result) {
    $row = $result->fetch_assoc();
    if ($row['db'] === $db_name) {
        echo "<p class='success'>‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö <code>$db_name</code> –∞–∫—Ç–∏–≤–Ω–∞</p>";
    } else {
        echo "<p class='error'>‚ùå –ê–∫—Ç–∏–≤–Ω–∞ —ñ–Ω—à–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö: <code>" . $row['db'] . "</code></p>";
    }
} else {
    echo "<p class='error'>‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö</p>";
}
echo "</div>";

// 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—å
echo "<div class='section'>";
echo "<h2>3Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—å</h2>";
$required_tables = ['users', 'lesson_requests', 'messages', 'ratings', 'specializations', 'tutor_specializations'];
$result = $conn->query("SHOW TABLES");
$existing_tables = [];
if ($result) {
    while ($row = $result->fetch_array()) {
        $existing_tables[] = $row[0];
    }
    
    echo "<table>";
    echo "<tr><th>–¢–∞–±–ª–∏—Ü—è</th><th>–°—Ç–∞—Ç—É—Å</th><th>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤</th></tr>";
    
    foreach ($required_tables as $table) {
        if (in_array($table, $existing_tables)) {
            $count_result = $conn->query("SELECT COUNT(*) as cnt FROM `$table`");
            $count = $count_result ? $count_result->fetch_assoc()['cnt'] : 0;
            echo "<tr><td><code>$table</code></td><td class='success'>‚úÖ –Ü—Å–Ω—É—î</td><td>$count</td></tr>";
        } else {
            echo "<tr><td><code>$table</code></td><td class='error'>‚ùå –í—ñ–¥—Å—É—Ç–Ω—è</td><td>-</td></tr>";
        }
    }
    echo "</table>";
} else {
    echo "<p class='error'>‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ç–∞–±–ª–∏—Ü—å</p>";
}
echo "</div>";

// 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ç–∞–±–ª–∏—Ü—ñ users
echo "<div class='section'>";
echo "<h2>4Ô∏è‚É£ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ñ <code>users</code></h2>";
$result = $conn->query("DESCRIBE users");
if ($result) {
    echo "<table>";
    echo "<tr><th>–ü–æ–ª–µ</th><th>–¢–∏–ø</th><th>Null</th><th>Key</th><th>Default</th></tr>";
    while ($row = $result->fetch_assoc()) {
        echo "<tr>";
        echo "<td><code>" . $row['Field'] . "</code></td>";
        echo "<td>" . $row['Type'] . "</td>";
        echo "<td>" . $row['Null'] . "</td>";
        echo "<td>" . $row['Key'] . "</td>";
        echo "<td>" . ($row['Default'] ?? 'NULL') . "</td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "<p class='error'>‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ç–∞–±–ª–∏—Ü—ñ</p>";
}
echo "</div>";

// 5. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
echo "<div class='section'>";
echo "<h2>5Ô∏è‚É£ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</h2>";
$result = $conn->query("SELECT id, name, email, role, created_at FROM users LIMIT 10");
if ($result && $result->num_rows > 0) {
    echo "<p class='success'>‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ " . $result->num_rows . " –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</p>";
    echo "<table>";
    echo "<tr><th>ID</th><th>–Ü–º'—è</th><th>Email</th><th>–†–æ–ª—å</th><th>–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è</th></tr>";
    while ($row = $result->fetch_assoc()) {
        echo "<tr>";
        echo "<td>" . $row['id'] . "</td>";
        echo "<td>" . htmlspecialchars($row['name']) . "</td>";
        echo "<td>" . htmlspecialchars($row['email']) . "</td>";
        echo "<td><code>" . ($row['role'] ?? 'NULL') . "</code></td>";
        echo "<td>" . $row['created_at'] . "</td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "<p class='warning'>‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>";
}
echo "</div>";

// 6. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É –¥–ª—è —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä–∞
echo "<div class='section'>";
echo "<h2>6Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä–∞</h2>";

// –ó–Ω–∞–π–¥–µ–º–æ –ø–µ—Ä—à–æ–≥–æ —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä–∞
$tutor_result = $conn->query("SELECT id FROM users WHERE role = 'tutor' LIMIT 1");
if ($tutor_result && $tutor_result->num_rows > 0) {
    $tutor = $tutor_result->fetch_assoc();
    $tutor_id = $tutor['id'];
    
    echo "<p>–¢–µ—Å—Ç—É—î–º–æ –¥–ª—è —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä–∞ ID: <code>$tutor_id</code></p>";
    
    $stmt = $conn->prepare("
        SELECT 
            COUNT(DISTINCT lr.id) as total_requests,
            SUM(CASE WHEN lr.status = '–û—á—ñ–∫—É—î' THEN 1 ELSE 0 END) as pending_requests,
            SUM(CASE WHEN lr.status = '–ü—Ä–∏–π–Ω—è—Ç–∞' THEN 1 ELSE 0 END) as accepted_requests,
            COALESCE(AVG(r.rating), 0) as avg_rating,
            COUNT(DISTINCT r.id) as total_ratings
        FROM lesson_requests lr
        LEFT JOIN ratings r ON lr.tutor_id = r.tutor_id
        WHERE lr.tutor_id = ?
        GROUP BY lr.tutor_id
    ");
    
    $stmt->bind_param("i", $tutor_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    echo "<p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Ç—É:</strong></p>";
    
    if ($result->num_rows > 0) {
        $stats = $result->fetch_assoc();
        echo "<table>";
        echo "<tr><th>–ü–∞—Ä–∞–º–µ—Ç—Ä</th><th>–ó–Ω–∞—á–µ–Ω–Ω—è</th><th>–¢–∏–ø</th></tr>";
        foreach ($stats as $key => $value) {
            $type = gettype($value);
            $display_value = $value === null ? 'NULL' : $value;
            echo "<tr><td><code>$key</code></td><td>$display_value</td><td>$type</td></tr>";
        }
        echo "</table>";
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ NULL
        echo "<h3>–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ NULL –∑–Ω–∞—á–µ–Ω—å:</h3>";
        foreach ($stats as $key => $value) {
            if ($value === null) {
                echo "<p class='error'>‚ùå –ü–æ–ª–µ <code>$key</code> –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è NULL</p>";
            } else {
                echo "<p class='success'>‚úÖ –ü–æ–ª–µ <code>$key</code> = $value</p>";
            }
        }
    } else {
        echo "<p class='warning'>‚ö†Ô∏è –ó–∞–ø–∏—Ç –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤</p>";
        echo "<p>–¶–µ –æ–∑–Ω–∞—á–∞—î, —â–æ —É —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä–∞ –Ω–µ–º–∞—î –∑–∞—è–≤–æ–∫. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Ä—É—á–Ω—É:</p>";
        
        $check = $conn->query("SELECT COUNT(*) as cnt FROM lesson_requests WHERE tutor_id = $tutor_id");
        $cnt = $check->fetch_assoc()['cnt'];
        echo "<p>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞—è–≤–æ–∫ –¥–ª—è tutor_id=$tutor_id: <code>$cnt</code></p>";
    }
} else {
    echo "<p class='warning'>‚ö†Ô∏è –§—Ä—ñ–ª–∞–Ω—Å–µ—Ä—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö</p>";
}
echo "</div>";

// 7. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É–≤–∞–Ω–Ω—è
echo "<div class='section'>";
echo "<h2>7Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É–≤–∞–Ω–Ω—è</h2>";
$result = $conn->query("SHOW VARIABLES LIKE 'character_set%'");
echo "<table>";
echo "<tr><th>–ü–∞—Ä–∞–º–µ—Ç—Ä</th><th>–ó–Ω–∞—á–µ–Ω–Ω—è</th></tr>";
while ($row = $result->fetch_assoc()) {
    echo "<tr><td><code>" . $row['Variable_name'] . "</code></td><td>" . $row['Value'] . "</td></tr>";
}
echo "</table>";
echo "</div>";

// 8. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–º–∏–ª–æ–∫ PHP
echo "<div class='section'>";
echo "<h2>8Ô∏è‚É£ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è PHP</h2>";
echo "<table>";
echo "<tr><th>–ü–∞—Ä–∞–º–µ—Ç—Ä</th><th>–ó–Ω–∞—á–µ–Ω–Ω—è</th></tr>";
echo "<tr><td>display_errors</td><td>" . ini_get('display_errors') . "</td></tr>";
echo "<tr><td>error_reporting</td><td>" . error_reporting() . "</td></tr>";
echo "<tr><td>mysqli extension</td><td>" . (extension_loaded('mysqli') ? '‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ' : '‚ùå –ù–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ') . "</td></tr>";
echo "</table>";
echo "</div>";

echo "<div class='section'>";
echo "<h2>‚úÖ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</h2>";
echo "<p>–Ø–∫—â–æ –≤–∏ –±–∞—á–∏—Ç–µ –ø–æ–º–∏–ª–∫–∏ –≤–∏—â–µ, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Å–∫—Ä—ñ–Ω—à–æ—Ç —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏.</p>";
echo "</div>";

$conn->close();
?>